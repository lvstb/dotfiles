

# vim:fileencoding=utf-8:ft=conf:foldmethod=marker:foldlevel=0
#: Fonts {{{

#: You can specify different fonts for the bold/italic/bold-italic
#: variants. To get a full list of supported fonts use the `kitty
#: list-fonts` command. By default they are derived automatically, by
#: the OSes font system. Setting them manually is useful for font
#: families that have many weight variants like Book, Medium, Thick,
#: etc. For example::

font_family      FiraCode Nerd Font Mono
bold_font        FiraCode Nerd Font Mono Bold
italic_font      FiraCode Nerd Font Mono Light
bold_italic_font FiraCode Nerd Font Mono Light

# Nerd Fonts v2.3.3

symbol_map U+23FB-U+23FE,U+2665,U+26A1,U+2B58,U+E000-U+E00A,U+E0A0-U+E0A3,U+E0B0-U+E0D4,U+E200-U+E2A9,U+E300-U+E3E3,U+E5FA-U+E6AA,U+E700-U+E7C5,U+EA60-U+EBEB,U+F000-U+F2E0,U+F300-U+F32F,U+F400-U+F4A9,U+F500-U+F8FF,U+F0001-U+F1AF0 Symbols Nerd Font Mono

font_size 15.0

adjust_line_height  100%

# symbol_map U+f101-U+f21d nonicons

#: }}}
#: Cursor customization {{{

#: The cursor shape can be one of (block, beam, underline)
cursor_shape beam

cursor_blink_interval 0

#: }}}
#: Scrollback {{{

#: Number of lines of history to keep in memory for scrolling back.
#: Memory is allocated on demand. Negative numbers are (effectively)
#: infinite scrollback. Note that using very large scrollback is not
#: recommended as it can slow down resizing of the terminal and also
#: use large amounts of RAM.
scrollback_lines 20000

#: }}}
#: Mouse {{{

#: The modifier keys to press when clicking with the mouse on URLs to
#: open the URL
open_url_modifiers cmd
macos_option_as_alt

#: }}}
#: Terminal bell {{{

#: Enable/disable the audio bell. Useful in environments that require
#: silence.
enable_audio_bell no

#: }}}
#: Window layout {{{

#: The enabled window layouts. A comma separated list of layout names.
#: The special value all means all layouts. The first listed layout
#: will be used as the startup layout. For a list of available
#: layouts, see the
#: https://sw.kovidgoyal.net/kitty/index.html#layouts.
enabled_layouts Splits,Stack

#: Draw only the minimum borders needed. This means that only the
#: minimum needed borders for inactive windows are drawn. That is only
#: the borders that separate the inactive window from a neighbor. Note
#: that setting a non-zero window margin overrides this and causes all
#: borders to be drawn.
draw_minimal_borders yes

#: Fade the text in inactive windows by the specified amount (a number
#: between zero and one, with zero being fully faded).
inactive_text_alpha 0.8

#: Hide the window decorations (title-bar and window borders). Whether
#: this works and exactly what effect it has depends on the window
#: manager/operating system.
hide_window_decorations yes

#: }}}
#: Color scheme {{{

# Import the color theme
#include themes/material-palenight.conf

#: }}}
#: Advanced {{{

#: Allow other programs to control kitty. If you turn this on other
#: programs can control all aspects of kitty, including sending text
#: to kitty windows, opening new windows, closing windows, reading the
#: content of windows, etc. Note that this even works over ssh
#: connections.
allow_remote_control yes

#: Path to a session file to use for all kitty instances. Can be
#: overridden by using the kitty --session command line option for
#: individual instances. See
#: https://sw.kovidgoyal.net/kitty/index.html#sessions in the kitty
#: documentation for details. Note that relative paths are interpreted
#: with respect to the kitty config directory. Environment variables
#: in the path are expanded.
startup_session default_session.kitty

#: }}}
#: OS specific tweaks {{{

#: Show the title of the currently active window in the macOS menu-
#: bar, making use of otherwise wasted space.
macos_show_window_title_in none

macos_titlebar_color background

#: }}}
#: Keyboard shortcuts {{{

#: Kitty modifier key
kitty_mod cmd
macos_option_as_alt yes
#: Mappings for vim-kitty-navigator
# map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j
# map ctrl+k kitten pass_keys.py neighboring_window top    ctrl+k
# map ctrl+h kitten pass_keys.py neighboring_window left   ctrl+h
# map ctrl+l kitten pass_keys.py neighboring_window right  ctrl+l
#
# map ctrl+left neighboring_window left
# map shift+left move_window right
# map ctrl+down neighboring_window down
# map shift+down move_window up

#: Search
map kitty_mod+/ show_scrollback

#: Grab kitten
# map kitty_mod+g kitten kitty_grab/grab.py

#: }}}
#: Clipboard {{{

#: There is also a copy_or_interrupt action that can be optionally
#: mapped to Ctrl+c. It will copy only if there is a selection and
#: send an interrupt otherwise.
# map kitty_mod+c copy_to_clipboard

# map cmd+c        copy_to_clipboard
map kitty_mod+v  paste_from_clipboard
map alt+v  paste_from_clipboard
# map cmd+v        paste_from_clipboard
# map kitty_mod+s  paste_from_selection
# map shift+insert paste_from_selection
# map kitty_mod+o  pass_selection_to_program

#: You can also pass the contents of the current selection to any
#: program using pass_selection_to_program. By default, the system's
#: open program is used, but you can specify your own, for example::

#:     map kitty_mod+o pass_selection_to_program firefox

#: You can pass the current selection to a terminal program running in
#: a new kitty window, by using the @selection placeholder::

#:     map kitty_mod+y new_window less @selection

#: }}}
#: Scrolling {{{

map kitty_mod+k scroll_line_up
map kitty_mod+j scroll_line_down
map kitty_mod+u scroll_page_up
map kitty_mod+d scroll_page_down
# map kitty_mod+h show_scrollback

# Scroll to previous/next prompt with Ctrl + Shift + p/n
map kitty_mod+p combine : toggle_marker text 1 ❯ : scroll_to_mark prev 1 : toggle_marker text 1 ❯
map kitty_mod+n combine : toggle_marker text 1 ❯ : scroll_to_mark next 1 : toggle_marker text 1 ❯

#: }}}
#: Window management {{{

map kitty_mod+enter new_window_with_cwd

map cmd+enter       no_op
map cmd+enter       new_window_with_cwd
map kitty_mod+enter new_window_with_cwd
map kitty_mod+alt+j move_window_forward
map kitty_mod+alt+k move_window_backward

map kitty_mod+s launch --location=hsplit --cwd=current
map kitty_mod+a launch --location=vsplit --cwd=current

map kitty_mod+o resize_window narrower
map kitty_mod+y resize_window wider
map kitty_mod+u resize_window taller
map kitty_mod+i resize_window shorter

#: }}}
#: Tab management {{{

map kitty_mod+l     next_tab
map kitty_mod+h     previous_tab
map kitty_mod+t     new_tab_with_cwd
map cmd+t           new_tab_with_cwd
map kitty_mod+alt+t set_tab_title

#: }}}
#: Layout management {{{

map kitty_mod+f next_layout

#: }}}
#: Include host specific conf {{{

# A local Kitty configuration file can be created which is not added to Git and
# can be used to conveniently override settings.

include kitty.local.conf

# }}}


include ./nord.conf
