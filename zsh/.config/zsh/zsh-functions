# Function to source files if they exist
function zsh_add_file() {
    [ -f "$ZDOTDIR/$1" ] && source "$ZDOTDIR/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"
    else
        git clone "git@github.com:$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
    fi
}

function zsh_add_completion() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
        # For completions
		completion_file_path=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
		fpath+="$(dirname "${completion_file_path}")"
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
    else
        git clone "git@github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
		fpath+=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
        [ -f $ZDOTDIR/.zccompdump ] && $ZDOTDIR/.zccompdump
    fi
	completion_file="$(basename "${completion_file_path}")"
	if [ "$2" = true ] && compinit "${completion_file:1}"
}



#All the dig info
function digga() {
		    dig +nocmd "$1" any +multiline +noall +answer
	    }
#print file size
function fs() {
	    if du -b /dev/null > /dev/null 2>&1; then
		    local arg=-sbh
	    else
		    local arg=-sh
	    fi
    	    if [[ -n "$@" ]]; then
	       du $arg -- "$@"
	    else
               du $arg .[^.]* *
            fi
       }
# function lazygit() {
# 	git add .
# 	git commit -a -m "$1"
# 	git push
# }
# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$_";
}
# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# # the `.git` directory, listing directories first. The output gets piped into
# # `less` with options to preserve color and line numbers, unless the output is
 # small enough for one screen.
function tre() {
   tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}
# Use Gitâ€™s colored diff when available
hash git &>/dev/null;
if [ $? -eq 0 ]; then
	function diff() {
		git diff --no-index --color-words "$@";
	}
fi;



# Function to check if credentials are valid for the selected profile
function check_credentials() {
    local profile=$1
    if ! aws sts get-caller-identity --profile "$profile" > /dev/null 2>&1; then
        echo "No valid credentials found for '$profile'. Initiating SSO login..."
        aws-sso-util login --profile "$profile"
    fi
}

# Function to select AWS profile using fzf
function saws() {
    local profile
    profile=$(awk -F '[][]' '/^\[profile /{print substr($2, 9, length($2) - 8)}' ~/.aws/config | fzf)

    if [[ -n $profile ]]; then
        export AWS_PROFILE=$profile
        echo "AWS Profile set to '$AWS_PROFILE'"
        check_credentials "$profile"
    else
        echo "No profile selected."
    fi
}